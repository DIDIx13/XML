<!--
Exemple de schéma pour l'exemple 1 avec l'arbre généaloqiue pour l'exercice 1 de XML-02-E02 et commentaires du choix des types en classe.
-->
<xsd:schema>
    <!--
Il n'y a pas de raisons objectives dans notre cas, qu'un nom ou prénom ait des espaces vides, tabulations, etc., avant et après le texte.
Il n'y a pas de raisons aussi d'avoir des espaces multiples dans un nom ou prénom composés de plusieurs mots, mais un espace entre chaque mot suffisant.
Pour répondre à ces contraintes, le type token a été choisi.
-->
    <xsd:element name="nom" type="xsd:token"/>
    <xsd:element name="prenom" type="xsd:token"/>
    <!--
Dans notre exemple, il n'y de justificatiosn permettant de saisir un âge ou un niveau négatif.
Un âge ou un niveau doit être un nombre entier et il n'y a pas de raison saisir un âge ou niveau à 1000.
Parmi les type les plus restrictif à notre connaissance actuelle du cours est le type unsignedByte a été choisi.
Attention, avec ce type de donnée, on peut saisir un âge et un niveau avec une valeur 200. A votre avis est-ce que cela est correct ?
-->
    <xsd:element name="age" type="xsd:unsignedByte"/>
    <xsd:attribute name="niveau" type="xsd:unsignedByte"/>
    <xsd:element name="personne">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="nom"/>
                <xsd:element ref="prenom"/>
                <xsd:element ref="age"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="enfant">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="personne"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="descendants">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="parents" maxOccurs="unbounded"/>
                <xsd:element ref="enfant" maxOccurs="unbounded"/>
            </xsd:choice>
            <xsd:attribute ref="niveau" use="required"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="parents">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="personne" maxOccurs="unbounded"/>
                <xsd:element ref="descendants"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="grandParent">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="personne" maxOccurs="unbounded"/>
                <xsd:element ref="descendants"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="famille">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="grandParent"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>